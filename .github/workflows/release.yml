name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Run tests
      run: go test -v -race ./...

  release:
    name: Create Release
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: true

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}
        HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries
        path: dist/

  build-installers:
    name: Build Platform Installers
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            installer: msi
          - os: macos-latest
            installer: pkg
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: binaries
        path: dist/

    - name: Build Windows MSI Installer
      if: matrix.os == 'windows-latest'
      run: |
        # Add WiX toolset for MSI creation
        choco install wixtoolset -y
        # Create MSI installer script here

    - name: Build macOS PKG Installer
      if: matrix.os == 'macos-latest'
      run: |
        # Create PKG installer
        mkdir -p installer/scripts installer/pkg
        cp dist/denv_*_Darwin_x86_64/denv installer/pkg/
        pkgbuild --root installer/pkg \
                 --install-location /usr/local/bin \
                 --identifier com.denv.cli \
                 --version ${{ github.ref_name }} \
                 denv-${{ github.ref_name }}.pkg

    - name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        name: installer-${{ matrix.os }}
        path: |
          *.msi
          *.pkg

  publish-release-notes:
    name: Publish Release Notes
    needs: [release, build-installers]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate detailed changelog
      id: changelog
      run: |
        # Generate changelog since last tag
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$PREV_TAG" ]; then
          echo "changelog=Initial Release" >> $GITHUB_OUTPUT
        else
          CHANGELOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Update release with additional notes
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        body_path: RELEASE_NOTES.md
        append_body: true
        files: |
          dist/checksums.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}