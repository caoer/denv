name: Semantic Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]')
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install semantic-release
      run: |
        npm install -g \
          semantic-release \
          @semantic-release/git \
          @semantic-release/github \
          @semantic-release/changelog \
          @semantic-release/exec \
          conventional-changelog-conventionalcommits

    - name: Create semantic-release config
      run: |
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["main"],
          "plugins": [
            ["@semantic-release/commit-analyzer", {
              "preset": "conventionalcommits",
              "releaseRules": [
                {"type": "feat", "release": "minor"},
                {"type": "fix", "release": "patch"},
                {"type": "perf", "release": "patch"},
                {"type": "revert", "release": "patch"},
                {"breaking": true, "release": "major"},
                {"type": "docs", "release": false},
                {"type": "style", "release": false},
                {"type": "refactor", "release": false},
                {"type": "test", "release": false},
                {"type": "build", "release": false},
                {"type": "ci", "release": false},
                {"type": "chore", "release": false}
              ]
            }],
            ["@semantic-release/release-notes-generator", {
              "preset": "conventionalcommits",
              "presetConfig": {
                "types": [
                  {"type": "feat", "section": "Features"},
                  {"type": "fix", "section": "Bug Fixes"},
                  {"type": "perf", "section": "Performance Improvements"},
                  {"type": "revert", "section": "Reverts"},
                  {"type": "docs", "section": "Documentation", "hidden": false},
                  {"type": "style", "section": "Styles", "hidden": true},
                  {"type": "chore", "section": "Miscellaneous Chores", "hidden": true},
                  {"type": "refactor", "section": "Code Refactoring", "hidden": true},
                  {"type": "test", "section": "Tests", "hidden": true},
                  {"type": "build", "section": "Build System", "hidden": true},
                  {"type": "ci", "section": "Continuous Integration", "hidden": true}
                ]
              }
            }],
            "@semantic-release/changelog",
            ["@semantic-release/git", {
              "assets": ["CHANGELOG.md"],
              "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
            }],
            ["@semantic-release/github", {
              "successComment": false,
              "failComment": false
            }],
            ["@semantic-release/exec", {
              "publishCmd": "echo ${nextRelease.version} > VERSION"
            }]
          ]
        }
        EOF

    - name: Run semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_AUTHOR_NAME: github-actions[bot]
        GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
        GIT_COMMITTER_NAME: github-actions[bot]
        GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
      run: npx semantic-release