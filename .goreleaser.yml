version: 2

project_name: denv

before:
  hooks:
    - go mod tidy
    - go mod download

builds:
  - id: denv
    main: ./cmd/denv
    binary: denv
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
      - freebsd
    goarch:
      - amd64
      - arm64
      - arm
      - 386
    goarm:
      - 6
      - 7
    ignore:
      - goos: windows
        goarch: arm64
      - goos: windows
        goarch: arm
      - goos: freebsd
        goarch: arm64
      - goos: freebsd
        goarch: arm
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - id: default
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE*
      - README*
      - CHANGELOG*

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
      - '^build:'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  groups:
    - title: 'New Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug Fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance Improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'Code Refactoring'
      regexp: '^.*?refactor(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: 'Documentation'
      regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: 'Dependency Updates'
      regexp: '^.*?deps(\([[:word:]]+\))??!?:.+$'
      order: 5
    - title: 'Other Changes'
      order: 999

release:
  github:
    owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
    name: "{{ .Env.GITHUB_REPOSITORY_NAME }}"
  name_template: "v{{.Version}}"
  draft: false
  prerelease: auto
  mode: append
  header: |
    ## denv v{{.Version}} Release Notes

    ### Installation

    #### Homebrew (macOS/Linux)
    ```bash
    brew tap caoer/denv
    brew install denv
    ```

    #### Direct Download
    Download the appropriate binary for your platform from the assets below.

    #### Install Script
    ```bash
    curl -fsSL https://raw.githubusercontent.com/caoer/denv/main/install.sh | bash
    ```

  footer: |
    ---
    **Full Changelog**: https://github.com/{{ .Env.GITHUB_REPOSITORY }}/compare/{{ .PreviousTag }}...{{ .Tag }}

    ### Docker Image
    ```bash
    docker pull ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:{{ .Version }}
    ```

brews:
  - repository:
      owner: "{{ .Env.GITHUB_REPOSITORY_OWNER }}"
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    folder: Formula
    homepage: https://github.com/{{ .Env.GITHUB_REPOSITORY }}
    description: "Zero-configuration development environment manager"
    license: "MIT"
    test: |
      system "#{bin}/denv", "--version"
    install: |
      bin.install "denv"

dockers:
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:latest-amd64"
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
  - image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:{{ .Version }}-arm64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:latest-arm64"
    use: buildx
    goarch: arm64
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"

docker_manifests:
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:{{ .Version }}"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:{{ .Version }}-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:{{ .Version }}-arm64"
  - name_template: "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:latest"
    image_templates:
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:latest-amd64"
      - "ghcr.io/{{ .Env.GITHUB_REPOSITORY_OWNER }}/denv:latest-arm64"

nfpms:
  - id: packages
    package_name: denv
    homepage: https://github.com/{{ .Env.GITHUB_REPOSITORY }}
    description: "Zero-configuration development environment manager"
    maintainer: Your Name <your.email@example.com>
    license: MIT
    vendor: denv
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin
    section: utils
    priority: optional
    recommends:
      - git